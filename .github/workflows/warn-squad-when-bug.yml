# This GitHub Action notifies squads on Issues if a P0 or P1 is assigned to them.
# It uses the config in `.github/360lConfig.json` to match the squad `label` with a squad `githubName`.
#
#
# This action triggers when:
# - an Issue is labeled
# - this Issue is open
# - this Issue has one of the following milestones:
#   - Bugs - P0
#   - Bugs - P1
# - the added label is a squad label
#
# This action's steps are:
# - read the content of `.github/360lConfig.json`
# - find the squad's config based on the squad label of the Issue 
# - write a comment on the Issue containing the squad's GitHub name 


name: When an issue is labeled with a squad label, ping squad if needed priority is P0 or P1

on:
  issues:
    types:
      - labeled

jobs:
  assign-random-squad:
    # example: https://docs.github.com/en/actions/learn-github-actions/expressions#example-matching-an-array-of-strings
    if: | 
        github.event.issue.state == 'open' && 
        contains(fromJSON('["Bugs - P0", "Bugs - P1"]'), github.event.issue.milestone.title)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/github-script@v6
        id: fetch-squad-config
        with:
          script: |
            const fs = require('fs').promises;

            // load 360lConfig.json
            const data = await fs.readFile('./.github/360lConfig.json');
            const config = JSON.parse(data);     

            // find squad config matching issue labels
            const squadConfig = config
              .squads
              .find(({ label }) => context.payload.issue.labels.some(({ name }) => name === label));

            console.log("squadConfig: " + squadConfig)

            return squadConfig;
      - uses: actions-ecosystem/action-create-comment@v1
        if: |
          steps.fetch-squad-config.outputs.result &&
          fromJSON(steps.fetch-squad-config.outputs.result).label == github.event.label.name &&
          fromJSON(steps.fetch-squad-config.outputs.result).githubName
        with:
          github_token: ${{ secrets.github_token }}
          body: |
            ${{ fromJSON(steps.fetch-squad-config.outputs.result).githubName }}
            A bug with priority *${{ github.event.issue.milestone.title }}* is assigned to your squad.
